{"version":3,"sources":["webpack:///./node_modules/markdown-it/lib/common/utils.js","webpack:///./node_modules/markdown-it/lib/rules_block/heading.js","webpack:///./node_modules/markdown-it/lib/index.js","webpack:///./node_modules/markdown-it/lib/token.js","webpack:///./node_modules/markdown-it/lib/rules_inline/state_inline.js","webpack:///./node_modules/markdown-it/lib/rules_block/lheading.js","webpack:///./node_modules/markdown-it/lib/presets/zero.js","webpack:///./node_modules/markdown-it/lib/rules_inline/text_collapse.js","webpack:///./node_modules/core-js/modules/es.string.includes.js","webpack:///./node_modules/markdown-it/lib/rules_inline/autolink.js","webpack:///./node_modules/markdown-it/lib/rules_core/block.js","webpack:///./node_modules/markdown-it/lib/rules_inline/newline.js","webpack:///./node_modules/markdown-it/lib/presets/commonmark.js","webpack:///./node_modules/mdurl/format.js","webpack:///./node_modules/markdown-it/lib/rules_block/paragraph.js","webpack:///./node_modules/markdown-it/lib/ruler.js","webpack:///./node_modules/markdown-it/lib/rules_inline/backticks.js","webpack:///./node_modules/markdown-it/lib/rules_block/list.js","webpack:///./node_modules/markdown-it/lib/rules_core/normalize.js","webpack:///./node_modules/markdown-it/lib/parser_inline.js","webpack:///./node_modules/uc.micro/categories/Z/regex.js","webpack:///./node_modules/markdown-it/lib/helpers/index.js","webpack:///./node_modules/markdown-it/lib/common/html_re.js","webpack:///./node_modules/core-js/internals/not-a-regexp.js","webpack:///./node_modules/markdown-it/lib/rules_inline/entity.js","webpack:///./node_modules/markdown-it/lib/rules_block/html_block.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/markdown-it/lib/rules_inline/escape.js","webpack:///./node_modules/uc.micro/categories/Cf/regex.js","webpack:///./node_modules/markdown-it/lib/rules_core/state_core.js","webpack:///./node_modules/markdown-it/lib/parser_block.js","webpack:///./node_modules/uc.micro/categories/P/regex.js","webpack:///./node_modules/markdown-it/lib/renderer.js","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_title.js","webpack:///./node_modules/markdown-it/lib/rules_block/table.js","webpack:///./node_modules/markdown-it/lib/rules_block/state_block.js","webpack:///./node_modules/markdown-it/lib/rules_inline/balance_pairs.js","webpack:///./node_modules/markdown-it/lib/presets/default.js","webpack:///./node_modules/mdurl/decode.js","webpack:///./node_modules/markdown-it/lib/rules_inline/strikethrough.js","webpack:///./node_modules/markdown-it/lib/rules_inline/image.js","webpack:///./node_modules/markdown-it/lib/rules_core/linkify.js","webpack:///./node_modules/markdown-it/lib/rules_block/code.js","webpack:///./node_modules/punycode/punycode.js","webpack:///./node_modules/markdown-it/lib/rules_core/inline.js","webpack:///./node_modules/uc.micro/categories/Cc/regex.js","webpack:///./node_modules/markdown-it/lib/parser_core.js","webpack:///./node_modules/core-js/internals/correct-is-regexp-logic.js","webpack:///./node_modules/markdown-it/lib/rules_core/smartquotes.js","webpack:///./node_modules/linkify-it/lib/re.js","webpack:///./node_modules/markdown-it/lib/rules_inline/text.js","webpack:///./node_modules/markdown-it/lib/rules_core/replacements.js","webpack:///./node_modules/markdown-it/lib/common/entities.js","webpack:///./node_modules/markdown-it/lib/rules_block/fence.js","webpack:///./node_modules/markdown-it/lib/rules_inline/html_inline.js","webpack:///./node_modules/mdurl/encode.js","webpack:///./node_modules/markdown-it/lib/rules_inline/emphasis.js","webpack:///./node_modules/core-js/modules/es.array.includes.js","webpack:///./node_modules/uc.micro/properties/Any/regex.js","webpack:///./node_modules/markdown-it/lib/rules_inline/link.js","webpack:///./node_modules/markdown-it/index.js","webpack:///./node_modules/uc.micro/index.js","webpack:///./node_modules/markdown-it/lib/rules_block/reference.js","webpack:///./node_modules/mdurl/index.js","webpack:///./node_modules/mdurl/parse.js","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_label.js","webpack:///./node_modules/markdown-it/lib/common/html_blocks.js","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_destination.js","webpack:///./node_modules/markdown-it/lib/rules_block/blockquote.js","webpack:///./src/utils/index.js","webpack:///./node_modules/linkify-it/index.js","webpack:///./node_modules/markdown-it/lib/rules_block/hr.js"],"names":["_class","obj","Object","prototype","toString","call","isString","_hasOwnProperty","hasOwnProperty","has","object","key","assign","sources","Array","slice","arguments","forEach","source","TypeError","keys","arrayReplaceAt","src","pos","newElements","concat","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","String","fromCharCode","UNESCAPE_MD_RE","ENTITY_RE","UNESCAPE_ALL_RE","RegExp","DIGITAL_ENTITY_TEST_RE","entities","replaceEntityPattern","match","name","code","charCodeAt","test","toLowerCase","parseInt","unescapeMd","str","indexOf","replace","unescapeAll","escaped","entity","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","ch","escapeHtml","REGEXP_ESCAPE_RE","escapeRE","isSpace","isWhiteSpace","UNICODE_PUNCT_RE","isPunctChar","isMdAsciiPunct","normalizeReference","trim","toUpperCase","exports","lib","mdurl","ucmicro","module","state","startLine","endLine","silent","level","tmp","token","bMarks","tShift","max","eMarks","sCount","blkIndent","skipSpacesBack","skipCharsBack","line","push","markup","map","content","children","utils","helpers","Renderer","ParserCore","ParserBlock","ParserInline","LinkifyIt","punycode","config","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","validateLink","url","RECODE_HOSTNAME_FOR","normalizeLink","parsed","parse","hostname","protocol","toASCII","er","encode","format","normalizeLinkText","toUnicode","decode","MarkdownIt","presetName","options","this","inline","block","core","renderer","linkify","configure","set","presets","self","Error","components","rules","ruler","enableOnly","rules2","ruler2","enable","list","ignoreInvalid","result","isArray","chain","missed","filter","length","disable","use","plugin","args","apply","env","State","process","tokens","render","parseInline","inlineMode","renderInline","Token","type","tag","nesting","attrs","info","meta","hidden","attrIndex","i","len","attrPush","attrData","attrSet","value","idx","attrGet","attrJoin","StateInline","md","outTokens","tokens_meta","posMax","pending","pendingLevel","cache","delimiters","_prev_delimiters","pushPending","token_meta","pop","scanDelims","start","canSplitWord","lastChar","nextChar","count","can_open","can_close","isLastWhiteSpace","isLastPunctChar","isNextWhiteSpace","isNextPunctChar","left_flanking","right_flanking","marker","terminate","l","oldParentType","nextLine","terminatorRules","getRules","parentType","isEmpty","skipChars","skipSpaces","getLines","html","xhtmlOut","breaks","langPrefix","typographer","quotes","highlight","maxNesting","curr","last","$","notARegExp","requireObjectCoercible","correctIsRegExpLogic","target","proto","forced","includes","searchString","undefined","EMAIL_RE","AUTOLINK_RE","tail","linkMatch","emailMatch","fullUrl","pmax","slashes","auth","port","pathname","search","hash","lineMax","Ruler","__rules__","__cache__","__find__","__compile__","chains","rule","enabled","alt","altName","fn","at","index","opt","before","beforeName","ruleName","splice","after","afterName","chainName","matchStart","matchEnd","skipBulletListMarker","skipOrderedListMarker","markTightParagraphs","contentStart","indent","indentAfterMarker","initial","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","offset","oldListIndent","oldSCount","oldTShift","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","tight","listIndent","Number","substr","bsCount","Math","min","tokenize","NEWLINES_RE","NULL_RE","_rules","_rules2","postProcess","skipToken","ok","end","parseLinkLabel","parseLinkDestination","parseLinkTitle","attr_name","unquoted","single_quoted","double_quoted","attr_value","attribute","open_tag","close_tag","comment","processing","declaration","cdata","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","isRegExp","it","DIGITAL_RE","NAMED_RE","block_names","HTML_SEQUENCES","join","lineText","webpackPolyfill","deprecate","paths","defineProperty","enumerable","get","ESCAPED","split","StateCore","hasEmptyLines","skipEmptyLines","default_rules","code_inline","slf","renderAttrs","code_block","fence","highlighted","tmpAttrs","tmpToken","langName","image","renderInlineAsText","renderToken","hardbreak","softbreak","text","html_block","html_inline","nextToken","needLf","lines","getLine","escapedSplit","escapes","lastPos","backTicked","lastBackTick","substring","columns","columnCount","aligns","t","tableLines","tbodyLines","StateBlock","s","indent_found","ddIndent","from","begin","keepLastLF","lineIndent","first","queue","lineStart","processDelimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","close","jump","open","decodeCache","getDecodeCache","exclude","string","defaultChars","seq","b1","b2","b3","b4","chr","componentChars","j","startDelim","endDelim","loneMarkers","scanned","label","labelEnd","labelStart","ref","res","title","href","oldPos","references","isLinkOpen","isLinkClose","currentToken","nodes","ln","htmlLinkLevel","urlText","links","blockTokens","pretest","schema","lastIndex","root","nodeType","freeGlobal","global","window","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","baseMinusTMin","floor","stringFromCharCode","error","RangeError","array","mapDomain","parts","labels","encoded","ucs2decode","extra","output","counter","ucs2encode","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","k","input","out","basic","oldi","w","baseMinusT","inputLength","n","bias","lastIndexOf","handledCPCount","basicLength","m","q","currentValue","handledCPCountPlusOne","qMinusT","tok","Core","wellKnownSymbol","MATCH","METHOD_NAME","regexp","e","f","QUOTE_TEST_RE","QUOTE_RE","APOSTROPHE","replaceAt","process_inlines","thisLevel","item","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","exec","single","blkIdx","opts","re","src_Any","src_Cc","src_Z","src_P","src_ZPCc","src_ZCc","text_separators","src_pseudo_letter","src_ip4","src_auth","src_port","src_host_terminator","src_path","src_email_name","src_xn","src_domain_root","src_domain","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","src_host_strict","tpl_host_fuzzy_strict","src_host_port_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","tpl_host_fuzzy_test","tpl_email_fuzzy","tpl_link_fuzzy","tpl_link_no_ip_fuzzy","isTerminatorChar","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","p","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","params","mem","haveEndMarker","isLetter","lc","encodeCache","getEncodeCache","keepEscaped","nextCode","encodeURIComponent","isStrong","$includes","addToUnscopables","arrayMethodUsesToLength","USES_TO_LENGTH","ACCESSORS","1","el","parseReference","Any","Cc","Cf","P","Z","_endLine","destEndPos","destEndLineNo","Url","protocolPattern","portPattern","simplePathPattern","delims","unwise","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","urlParse","slashesDenoteHost","u","lowerProto","hec","rest","simplePath","atSign","hostEnd","host","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","unshift","qm","disableNested","found","prevPos","adjustTab","lastLineEmpty","oldBMarks","oldBSCount","oldIndent","spaceAfterMarker","wasOutdented","oldLineMax","isProd","markdown","hljs","originRender","srcIndex","getUrl","typeMaps","number","getParentType","finder","parent","isObject","isFunction","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","isOptionsObj","reduce","acc","defaultSchemas","validate","http","no_http","mailto","tlds_2ch_src_re","tlds_default","resetScanCache","__index__","__text_cache__","createValidator","createNormalizer","normalize","compile","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","email_fuzzy","link_fuzzy","link_no_ip_fuzzy","host_fuzzy_test","aliases","schemaError","val","__compiled__","__schemas__","compiled","link","alias","slist","schema_test","schema_search","Match","shift","__last_index__","__schema__","raw","createMatch","schemas","add","definition","ml","me","next","tld_pos","at_pos","testSchemaAt","keepOld","sort","arr","reverse","cnt"],"mappings":"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","file":"js/api~doc~index.1d331781.js","sourcesContent":["// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  'default': require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.decode(mdurl.format(parsed));\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(lang, str, true).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(lang, str, true).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you with - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and returns list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * fence infostring\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function text_collapse(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\n\n// `String.prototype.includes` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.includes\n$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~String(requireObjectCoercible(this))\n      .indexOf(notARegExp(searchString), arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\nvar AUTOLINK_RE = /^<([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)>/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var tail, linkMatch, emailMatch, url, fullUrl, token,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  tail = state.src.slice(pos);\n\n  if (tail.indexOf('>') < 0) { return false; }\n\n  if (AUTOLINK_RE.test(tail)) {\n    linkMatch = tail.match(AUTOLINK_RE);\n\n    url = linkMatch[0].slice(1, -1);\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += linkMatch[0].length;\n    return true;\n  }\n\n  if (EMAIL_RE.test(tail)) {\n    emailMatch = tail.match(EMAIL_RE);\n\n    url = emailMatch[0].slice(1, -1);\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += emailMatch[0].length;\n    return true;\n  }\n\n  return false;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        state.pending = state.pending.replace(/ +$/, '');\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Parse backticks\n\n'use strict';\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, matchStart, matchEnd, token,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n\n  matchStart = matchEnd = pos;\n\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    if (matchEnd - matchStart === marker.length) {\n      if (!silent) {\n        token         = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += marker; }\n  state.pos += marker.length;\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.tShift[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.substr(start, posAfterMarker - start - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  [ 'text_collapse',   require('./rules_inline/text_collapse') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?].*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","var isRegExp = require('../internals/is-regexp');\n\nmodule.exports = function (it) {\n  if (isRegExp(it)) {\n    throw TypeError(\"The method doesn't accept regular expressions\");\n  } return it;\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) { state.pending += entities[match[1]]; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n};\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style)(?=(\\s|>|$))/i, /<\\/(script|pre|style)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n};\n","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      highlighted, i, tmpAttrs, tmpToken;\n\n  if (info) {\n    langName = info.split(/\\s+/g)[0];\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .clone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","// GFM table, non-standard\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.blkIndent,\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      escapes = 0,\n      lastPos = 0,\n      backTicked = false,\n      lastBackTick = 0;\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x60/* ` */) {\n      if (backTicked) {\n        // make \\` close code sequence, but not open it;\n        // the reason is: `\\` is correct code block\n        backTicked = false;\n        lastBackTick = pos;\n      } else if (escapes % 2 === 0) {\n        backTicked = true;\n        lastBackTick = pos;\n      }\n    } else if (ch === 0x7c/* | */ && (escapes % 2 === 0) && !backTicked) {\n      result.push(str.substring(lastPos, pos));\n      lastPos = pos + 1;\n    }\n\n    if (ch === 0x5c/* \\ */) {\n      escapes++;\n    } else {\n      escapes = 0;\n    }\n\n    pos++;\n\n    // If there was an un-closed backtick, go back to just after\n    // the last backtick, but as if it was a normal character\n    if (pos === max && backTicked) {\n      backTicked = false;\n      pos = lastBackTick + 1;\n    }\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  ch = state.src.charCodeAt(pos++);\n  if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText.replace(/^\\||\\|$/g, ''));\n\n  // header row will define an amount of columns in the entire table,\n  // and align row shouldn't be smaller than that (the rest of the rows can)\n  columnCount = columns.length;\n  if (columnCount > aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    token.map      = [ startLine, startLine + 1 ];\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.map      = [ startLine, startLine + 1 ];\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  token     = state.push('tbody_open', 'tbody', 1);\n  token.map = tbodyLines = [ startLine + 2, 0 ];\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    lineText = getLine(state, nextLine).trim();\n    if (lineText.indexOf('|') === -1) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText.replace(/^\\||\\|$/g, ''));\n\n    token = state.push('tr_open', 'tr', 1);\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n  token = state.push('tbody_close', 'tbody', -1);\n  token = state.push('table_close', 'table', -1);\n\n  tableLines[1] = tbodyLines[1] = nextLine;\n  state.line = nextLine;\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker and each delimiter length modulo 3.\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][closer.length % 3];\n    newMinOpenerIdx = -1;\n\n    openerIdx = closerIdx - closer.jump - 1;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= opener.jump + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (newMinOpenerIdx === -1) newMinOpenerIdx = openerIdx;\n\n      if (opener.open &&\n          opener.end < 0 &&\n          opener.level === closer.level) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            delimiters[openerIdx - 1].jump + 1 :\n            0;\n\n          closer.jump  = closerIdx - openerIdx + lastJump;\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.jump  = lastJump;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.length || 0) % 3] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0, // disable \"rule of 3\" length checks meant for emphasis\n      jump:   i,\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, true);\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\nmodule.exports = function (METHOD_NAME) {\n  var regexp = /./;\n  try {\n    '/./'[METHOD_NAME](regexp);\n  } catch (e) {\n    try {\n      regexp[MATCH] = false;\n      return '/./'[METHOD_NAME](regexp);\n    } catch (f) { /* empty */ }\n  } return false;\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (tokens[j].type !== 'text') continue;\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (tokens[j].type !== 'text') continue;\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // treat this as the middle of the word\n        canOpen = false;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-]).|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,4}[a-zA-Z0-9%/]|' + // github has ... in commit range links,\n                                     // google has .... in links (issue #66)\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]).|' +\n          (opts && opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          '\\\\,(?!' + re.src_ZCc + ').|' +      // allow `,,,` in paths\n          '\\\\!(?!' + re.src_ZCc + '|[!]).|' +\n          '\\\\?(?!' + re.src_ZCc + '|[?]).' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---([^-]|$)/mg, '$1\\u2014$2')\n          // en-dash\n          .replace(/(^|\\s)--(\\s|$)/mg, '$1\\u2013$2')\n          .replace(/(^|[^-\\s])--([^-\\s]|$)/mg, '$1\\u2013$2');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // An amount of characters before this one that's equivalent to\n      // current one. In plain English: if this delimiter does not open\n      // an emphasis, neither do previous `jump` characters.\n      //\n      // Used to skip sequences like \"*****\" in one step, for 1st asterisk\n      // value will be 0, for 2nd it's 1 and so on.\n      //\n      jump:   i,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               delimiters[startDelim.end + 1].token === endDelim.token + 1 &&\n               delimiters[i - 1].marker === startDelim.marker;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $includes = require('../internals/array-includes').includes;\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar USES_TO_LENGTH = arrayMethodUsesToLength('indexOf', { ACCESSORS: true, 1: 0 });\n\n// `Array.prototype.includes` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.includes\n$({ target: 'Array', proto: true, forced: !USES_TO_LENGTH }, {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('includes');\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      title,\n      token,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.md.inline.tokenize(state);\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'meta',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      wasOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // skip spaces after \">\" and re-calculate offset\n  initial = offset = state.sCount[startLine] + pos - (state.bMarks[startLine] + state.tShift[startLine]);\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n  wasOutdented = false;\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    if (state.sCount[nextLine] < state.blkIndent) wasOutdented = true;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !wasOutdented) {\n      // This line is inside the blockquote.\n\n      // skip spaces after \">\" and re-calculate offset\n      initial = offset = state.sCount[nextLine] + pos - (state.bMarks[nextLine] + state.tShift[nextLine]);\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","import MarkdownIt from 'markdown-it';\nimport hljs from 'highlight.js';\nimport { getUrl } from '../api';\nimport 'highlight.js/lib/languages/json';\n\nconst isProd = process.env.NODE_ENV === 'production';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const markdown = (text) => {\n  const md = new MarkdownIt({\n    highlight(str) {\n      return hljs.highlight('json', str).value;\n    },\n  });\n  if (!isProd) {\n    const originRender = md.renderer.rules.image;\n    md.renderer.rules.image = function render(tokens, idx, options, env, self) {\n      const token = tokens[idx];\n      const srcIndex = token.attrIndex('src');\n      token.attrs[srcIndex][1] = getUrl() + token.attrGet('src');\n\n      return originRender(tokens, idx, options, env, self);\n    };\n  }\n  return md.render(text);\n};\n\nconst typeMaps = {\n  string: ['date', 'datetime',\n    'word', 'cword', 'cw',\n    'title', 'ctitle', 'ct',\n    'sentence', 'csentence', 'cs',\n    'summary', 'csummary', 'cm',\n    'paragraph', 'cparagraph', 'cp',\n    'name', 'cname',\n    'uuid', 'url', 'domain', 'ip', 'email', 'image'],\n  number: ['int', 'posint', 'negint', 'float', 'posfloat', 'negfloat', 'timestamp'],\n};\n\nexport const getParentType = (type) => {\n  const finder = ['string', 'number'].filter(parent => typeMaps[parent].includes(type.toLowerCase()));\n  return finder.length > 0 ? finder[0] : '';\n};\n","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n"],"sourceRoot":""}